generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id         Int       @id @default(autoincrement())
  content    String
  post_id    Int
  author_id  Int
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  users      users     @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_comments_author")
  posts      posts     @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_comments_post")
}

model posts {
  id         Int        @id @default(autoincrement())
  title      String     @db.VarChar(255)
  content    String
  author_id  Int
  published  Boolean?   @default(false)
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  comments   comments[]
  users      users      @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_posts_author")
}

model users {
  id         Int        @id @default(autoincrement())
  username   String     @unique @db.VarChar(50)
  email      String     @unique @db.VarChar(255)
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at DateTime?  @default(now()) @db.Timestamptz(6)
  password   String     @db.VarChar(255)
  comments   comments[]
  posts      posts[]
}
